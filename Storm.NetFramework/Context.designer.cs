#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Storm.NetFramework
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Storm")]
	public partial class ContextDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void Insertarrival(arrival instance);
    partial void Updatearrival(arrival instance);
    partial void Deletearrival(arrival instance);
    partial void Insertworkplace_foreigners(workplace_foreigners instance);
    partial void Updateworkplace_foreigners(workplace_foreigners instance);
    partial void Deleteworkplace_foreigners(workplace_foreigners instance);
    partial void Insertarrival_foreigners(arrival_foreigners instance);
    partial void Updatearrival_foreigners(arrival_foreigners instance);
    partial void Deletearrival_foreigners(arrival_foreigners instance);
    partial void Insertdocument_type(document_type instance);
    partial void Updatedocument_type(document_type instance);
    partial void Deletedocument_type(document_type instance);
    partial void Inserteducation(education instance);
    partial void Updateeducation(education instance);
    partial void Deleteeducation(education instance);
    partial void Inserteducation_foreigners(education_foreigners instance);
    partial void Updateeducation_foreigners(education_foreigners instance);
    partial void Deleteeducation_foreigners(education_foreigners instance);
    partial void Insertembassy(embassy instance);
    partial void Updateembassy(embassy instance);
    partial void Deleteembassy(embassy instance);
    partial void Insertfiles(files instance);
    partial void Updatefiles(files instance);
    partial void Deletefiles(files instance);
    partial void Insertfiles_foreigners(files_foreigners instance);
    partial void Updatefiles_foreigners(files_foreigners instance);
    partial void Deletefiles_foreigners(files_foreigners instance);
    partial void Insertforeigners(foreigners instance);
    partial void Updateforeigners(foreigners instance);
    partial void Deleteforeigners(foreigners instance);
    partial void Insertgender(gender instance);
    partial void Updategender(gender instance);
    partial void Deletegender(gender instance);
    partial void Inserthobby(hobby instance);
    partial void Updatehobby(hobby instance);
    partial void Deletehobby(hobby instance);
    partial void Inserthobby_foreigners(hobby_foreigners instance);
    partial void Updatehobby_foreigners(hobby_foreigners instance);
    partial void Deletehobby_foreigners(hobby_foreigners instance);
    partial void Inserthost_country(host_country instance);
    partial void Updatehost_country(host_country instance);
    partial void Deletehost_country(host_country instance);
    partial void Insertidentity_document(identity_document instance);
    partial void Updateidentity_document(identity_document instance);
    partial void Deleteidentity_document(identity_document instance);
    partial void Insertlanguages(languages instance);
    partial void Updatelanguages(languages instance);
    partial void Deletelanguages(languages instance);
    partial void Insertlanguages_foreigners(languages_foreigners instance);
    partial void Updatelanguages_foreigners(languages_foreigners instance);
    partial void Deletelanguages_foreigners(languages_foreigners instance);
    partial void Insertnationality(nationality instance);
    partial void Updatenationality(nationality instance);
    partial void Deletenationality(nationality instance);
    partial void Insertproject(project instance);
    partial void Updateproject(project instance);
    partial void Deleteproject(project instance);
    partial void Insertproject_foreigners(project_foreigners instance);
    partial void Updateproject_foreigners(project_foreigners instance);
    partial void Deleteproject_foreigners(project_foreigners instance);
    partial void Insertpurpose(purpose instance);
    partial void Updatepurpose(purpose instance);
    partial void Deletepurpose(purpose instance);
    partial void Insertworkplace(workplace instance);
    partial void Updateworkplace(workplace instance);
    partial void Deleteworkplace(workplace instance);
    #endregion
		
		public ContextDataContext() : 
				base(global::Storm.NetFramework.Properties.Settings.Default.StormConnectionString2, mappingSource)
		{
			OnCreated();
		}
		
		public ContextDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ContextDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ContextDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ContextDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<arrival> arrival
		{
			get
			{
				return this.GetTable<arrival>();
			}
		}
		
		public System.Data.Linq.Table<workplace_foreigners> workplace_foreigners
		{
			get
			{
				return this.GetTable<workplace_foreigners>();
			}
		}
		
		public System.Data.Linq.Table<arrival_foreigners> arrival_foreigners
		{
			get
			{
				return this.GetTable<arrival_foreigners>();
			}
		}
		
		public System.Data.Linq.Table<document_type> document_type
		{
			get
			{
				return this.GetTable<document_type>();
			}
		}
		
		public System.Data.Linq.Table<education> education
		{
			get
			{
				return this.GetTable<education>();
			}
		}
		
		public System.Data.Linq.Table<education_foreigners> education_foreigners
		{
			get
			{
				return this.GetTable<education_foreigners>();
			}
		}
		
		public System.Data.Linq.Table<embassy> embassy
		{
			get
			{
				return this.GetTable<embassy>();
			}
		}
		
		public System.Data.Linq.Table<files> files
		{
			get
			{
				return this.GetTable<files>();
			}
		}
		
		public System.Data.Linq.Table<files_foreigners> files_foreigners
		{
			get
			{
				return this.GetTable<files_foreigners>();
			}
		}
		
		public System.Data.Linq.Table<foreigners> foreigners
		{
			get
			{
				return this.GetTable<foreigners>();
			}
		}
		
		public System.Data.Linq.Table<gender> gender
		{
			get
			{
				return this.GetTable<gender>();
			}
		}
		
		public System.Data.Linq.Table<hobby> hobby
		{
			get
			{
				return this.GetTable<hobby>();
			}
		}
		
		public System.Data.Linq.Table<hobby_foreigners> hobby_foreigners
		{
			get
			{
				return this.GetTable<hobby_foreigners>();
			}
		}
		
		public System.Data.Linq.Table<host_country> host_country
		{
			get
			{
				return this.GetTable<host_country>();
			}
		}
		
		public System.Data.Linq.Table<identity_document> identity_document
		{
			get
			{
				return this.GetTable<identity_document>();
			}
		}
		
		public System.Data.Linq.Table<languages> languages
		{
			get
			{
				return this.GetTable<languages>();
			}
		}
		
		public System.Data.Linq.Table<languages_foreigners> languages_foreigners
		{
			get
			{
				return this.GetTable<languages_foreigners>();
			}
		}
		
		public System.Data.Linq.Table<nationality> nationality
		{
			get
			{
				return this.GetTable<nationality>();
			}
		}
		
		public System.Data.Linq.Table<project> project
		{
			get
			{
				return this.GetTable<project>();
			}
		}
		
		public System.Data.Linq.Table<project_foreigners> project_foreigners
		{
			get
			{
				return this.GetTable<project_foreigners>();
			}
		}
		
		public System.Data.Linq.Table<purpose> purpose
		{
			get
			{
				return this.GetTable<purpose>();
			}
		}
		
		public System.Data.Linq.Table<workplace> workplace
		{
			get
			{
				return this.GetTable<workplace>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.arrival")]
	public partial class arrival : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_arrival;
		
		private System.Nullable<System.DateTime> _date_of_arrival;
		
		private string _place_of_stay;
		
		private System.Nullable<int> _purposeid_purpose;
		
		private System.Nullable<int> _host_countryid_host_country;
		
		private EntitySet<arrival_foreigners> _arrival_foreigners;
		
		private EntitySet<workplace> _workplace;
		
		private EntityRef<host_country> _host_country;
		
		private EntityRef<purpose> _purpose;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_arrivalChanging(int value);
    partial void Onid_arrivalChanged();
    partial void Ondate_of_arrivalChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_of_arrivalChanged();
    partial void Onplace_of_stayChanging(string value);
    partial void Onplace_of_stayChanged();
    partial void Onpurposeid_purposeChanging(System.Nullable<int> value);
    partial void Onpurposeid_purposeChanged();
    partial void Onhost_countryid_host_countryChanging(System.Nullable<int> value);
    partial void Onhost_countryid_host_countryChanged();
    #endregion
		
		public arrival()
		{
			this._arrival_foreigners = new EntitySet<arrival_foreigners>(new Action<arrival_foreigners>(this.attach_arrival_foreigners), new Action<arrival_foreigners>(this.detach_arrival_foreigners));
			this._workplace = new EntitySet<workplace>(new Action<workplace>(this.attach_workplace), new Action<workplace>(this.detach_workplace));
			this._host_country = default(EntityRef<host_country>);
			this._purpose = default(EntityRef<purpose>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_arrival", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_arrival
		{
			get
			{
				return this._id_arrival;
			}
			set
			{
				if ((this._id_arrival != value))
				{
					this.Onid_arrivalChanging(value);
					this.SendPropertyChanging();
					this._id_arrival = value;
					this.SendPropertyChanged("id_arrival");
					this.Onid_arrivalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_of_arrival", DbType="DateTime")]
		public System.Nullable<System.DateTime> date_of_arrival
		{
			get
			{
				return this._date_of_arrival;
			}
			set
			{
				if ((this._date_of_arrival != value))
				{
					this.Ondate_of_arrivalChanging(value);
					this.SendPropertyChanging();
					this._date_of_arrival = value;
					this.SendPropertyChanged("date_of_arrival");
					this.Ondate_of_arrivalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_place_of_stay", DbType="NVarChar(500)")]
		public string place_of_stay
		{
			get
			{
				return this._place_of_stay;
			}
			set
			{
				if ((this._place_of_stay != value))
				{
					this.Onplace_of_stayChanging(value);
					this.SendPropertyChanging();
					this._place_of_stay = value;
					this.SendPropertyChanged("place_of_stay");
					this.Onplace_of_stayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_purposeid_purpose", DbType="Int")]
		public System.Nullable<int> purposeid_purpose
		{
			get
			{
				return this._purposeid_purpose;
			}
			set
			{
				if ((this._purposeid_purpose != value))
				{
					if (this._purpose.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpurposeid_purposeChanging(value);
					this.SendPropertyChanging();
					this._purposeid_purpose = value;
					this.SendPropertyChanged("purposeid_purpose");
					this.Onpurposeid_purposeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_host_countryid_host_country", DbType="Int")]
		public System.Nullable<int> host_countryid_host_country
		{
			get
			{
				return this._host_countryid_host_country;
			}
			set
			{
				if ((this._host_countryid_host_country != value))
				{
					if (this._host_country.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onhost_countryid_host_countryChanging(value);
					this.SendPropertyChanging();
					this._host_countryid_host_country = value;
					this.SendPropertyChanged("host_countryid_host_country");
					this.Onhost_countryid_host_countryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="arrival_arrival_foreigners", Storage="_arrival_foreigners", ThisKey="id_arrival", OtherKey="id_arrival")]
		public EntitySet<arrival_foreigners> arrival_foreigners
		{
			get
			{
				return this._arrival_foreigners;
			}
			set
			{
				this._arrival_foreigners.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="arrival_workplace", Storage="_workplace", ThisKey="id_arrival", OtherKey="id_arrival")]
		public EntitySet<workplace> workplace
		{
			get
			{
				return this._workplace;
			}
			set
			{
				this._workplace.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="host_country_arrival", Storage="_host_country", ThisKey="host_countryid_host_country", OtherKey="id_host_country", IsForeignKey=true)]
		public host_country host_country
		{
			get
			{
				return this._host_country.Entity;
			}
			set
			{
				host_country previousValue = this._host_country.Entity;
				if (((previousValue != value) 
							|| (this._host_country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._host_country.Entity = null;
						previousValue.arrival.Remove(this);
					}
					this._host_country.Entity = value;
					if ((value != null))
					{
						value.arrival.Add(this);
						this._host_countryid_host_country = value.id_host_country;
					}
					else
					{
						this._host_countryid_host_country = default(Nullable<int>);
					}
					this.SendPropertyChanged("host_country");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="purpose_arrival", Storage="_purpose", ThisKey="purposeid_purpose", OtherKey="id_purpose", IsForeignKey=true)]
		public purpose purpose
		{
			get
			{
				return this._purpose.Entity;
			}
			set
			{
				purpose previousValue = this._purpose.Entity;
				if (((previousValue != value) 
							|| (this._purpose.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._purpose.Entity = null;
						previousValue.arrival.Remove(this);
					}
					this._purpose.Entity = value;
					if ((value != null))
					{
						value.arrival.Add(this);
						this._purposeid_purpose = value.id_purpose;
					}
					else
					{
						this._purposeid_purpose = default(Nullable<int>);
					}
					this.SendPropertyChanged("purpose");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_arrival_foreigners(arrival_foreigners entity)
		{
			this.SendPropertyChanging();
			entity.arrival = this;
		}
		
		private void detach_arrival_foreigners(arrival_foreigners entity)
		{
			this.SendPropertyChanging();
			entity.arrival = null;
		}
		
		private void attach_workplace(workplace entity)
		{
			this.SendPropertyChanging();
			entity.arrival = this;
		}
		
		private void detach_workplace(workplace entity)
		{
			this.SendPropertyChanging();
			entity.arrival = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.workplace_foreigners")]
	public partial class workplace_foreigners : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_workplace_foreigners;
		
		private int _id_workplace;
		
		private int _id_foreigner;
		
		private EntityRef<foreigners> _foreigners;
		
		private EntityRef<workplace> _workplace;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_workplace_foreignersChanging(int value);
    partial void Onid_workplace_foreignersChanged();
    partial void Onid_workplaceChanging(int value);
    partial void Onid_workplaceChanged();
    partial void Onid_foreignerChanging(int value);
    partial void Onid_foreignerChanged();
    #endregion
		
		public workplace_foreigners()
		{
			this._foreigners = default(EntityRef<foreigners>);
			this._workplace = default(EntityRef<workplace>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_workplace_foreigners", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_workplace_foreigners
		{
			get
			{
				return this._id_workplace_foreigners;
			}
			set
			{
				if ((this._id_workplace_foreigners != value))
				{
					this.Onid_workplace_foreignersChanging(value);
					this.SendPropertyChanging();
					this._id_workplace_foreigners = value;
					this.SendPropertyChanged("id_workplace_foreigners");
					this.Onid_workplace_foreignersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_workplace", DbType="Int NOT NULL")]
		public int id_workplace
		{
			get
			{
				return this._id_workplace;
			}
			set
			{
				if ((this._id_workplace != value))
				{
					if (this._workplace.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_workplaceChanging(value);
					this.SendPropertyChanging();
					this._id_workplace = value;
					this.SendPropertyChanged("id_workplace");
					this.Onid_workplaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_foreigner", DbType="Int NOT NULL")]
		public int id_foreigner
		{
			get
			{
				return this._id_foreigner;
			}
			set
			{
				if ((this._id_foreigner != value))
				{
					if (this._foreigners.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_foreignerChanging(value);
					this.SendPropertyChanging();
					this._id_foreigner = value;
					this.SendPropertyChanged("id_foreigner");
					this.Onid_foreignerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="foreigners_workplace_foreigners", Storage="_foreigners", ThisKey="id_foreigner", OtherKey="id_foreigner", IsForeignKey=true)]
		public foreigners foreigners
		{
			get
			{
				return this._foreigners.Entity;
			}
			set
			{
				foreigners previousValue = this._foreigners.Entity;
				if (((previousValue != value) 
							|| (this._foreigners.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._foreigners.Entity = null;
						previousValue.workplace_foreigners.Remove(this);
					}
					this._foreigners.Entity = value;
					if ((value != null))
					{
						value.workplace_foreigners.Add(this);
						this._id_foreigner = value.id_foreigner;
					}
					else
					{
						this._id_foreigner = default(int);
					}
					this.SendPropertyChanged("foreigners");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="workplace_workplace_foreigners", Storage="_workplace", ThisKey="id_workplace", OtherKey="id_workplace", IsForeignKey=true)]
		public workplace workplace
		{
			get
			{
				return this._workplace.Entity;
			}
			set
			{
				workplace previousValue = this._workplace.Entity;
				if (((previousValue != value) 
							|| (this._workplace.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._workplace.Entity = null;
						previousValue.workplace_foreigners.Remove(this);
					}
					this._workplace.Entity = value;
					if ((value != null))
					{
						value.workplace_foreigners.Add(this);
						this._id_workplace = value.id_workplace;
					}
					else
					{
						this._id_workplace = default(int);
					}
					this.SendPropertyChanged("workplace");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.arrival_foreigners")]
	public partial class arrival_foreigners : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_arrival_foreigners;
		
		private int _id_arrival;
		
		private int _id_foreigner;
		
		private EntityRef<arrival> _arrival;
		
		private EntityRef<foreigners> _foreigners;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_arrival_foreignersChanging(int value);
    partial void Onid_arrival_foreignersChanged();
    partial void Onid_arrivalChanging(int value);
    partial void Onid_arrivalChanged();
    partial void Onid_foreignerChanging(int value);
    partial void Onid_foreignerChanged();
    #endregion
		
		public arrival_foreigners()
		{
			this._arrival = default(EntityRef<arrival>);
			this._foreigners = default(EntityRef<foreigners>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_arrival_foreigners", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_arrival_foreigners
		{
			get
			{
				return this._id_arrival_foreigners;
			}
			set
			{
				if ((this._id_arrival_foreigners != value))
				{
					this.Onid_arrival_foreignersChanging(value);
					this.SendPropertyChanging();
					this._id_arrival_foreigners = value;
					this.SendPropertyChanged("id_arrival_foreigners");
					this.Onid_arrival_foreignersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_arrival", DbType="Int NOT NULL")]
		public int id_arrival
		{
			get
			{
				return this._id_arrival;
			}
			set
			{
				if ((this._id_arrival != value))
				{
					if (this._arrival.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_arrivalChanging(value);
					this.SendPropertyChanging();
					this._id_arrival = value;
					this.SendPropertyChanged("id_arrival");
					this.Onid_arrivalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_foreigner", DbType="Int NOT NULL")]
		public int id_foreigner
		{
			get
			{
				return this._id_foreigner;
			}
			set
			{
				if ((this._id_foreigner != value))
				{
					if (this._foreigners.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_foreignerChanging(value);
					this.SendPropertyChanging();
					this._id_foreigner = value;
					this.SendPropertyChanged("id_foreigner");
					this.Onid_foreignerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="arrival_arrival_foreigners", Storage="_arrival", ThisKey="id_arrival", OtherKey="id_arrival", IsForeignKey=true)]
		public arrival arrival
		{
			get
			{
				return this._arrival.Entity;
			}
			set
			{
				arrival previousValue = this._arrival.Entity;
				if (((previousValue != value) 
							|| (this._arrival.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._arrival.Entity = null;
						previousValue.arrival_foreigners.Remove(this);
					}
					this._arrival.Entity = value;
					if ((value != null))
					{
						value.arrival_foreigners.Add(this);
						this._id_arrival = value.id_arrival;
					}
					else
					{
						this._id_arrival = default(int);
					}
					this.SendPropertyChanged("arrival");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="foreigners_arrival_foreigners", Storage="_foreigners", ThisKey="id_foreigner", OtherKey="id_foreigner", IsForeignKey=true)]
		public foreigners foreigners
		{
			get
			{
				return this._foreigners.Entity;
			}
			set
			{
				foreigners previousValue = this._foreigners.Entity;
				if (((previousValue != value) 
							|| (this._foreigners.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._foreigners.Entity = null;
						previousValue.arrival_foreigners.Remove(this);
					}
					this._foreigners.Entity = value;
					if ((value != null))
					{
						value.arrival_foreigners.Add(this);
						this._id_foreigner = value.id_foreigner;
					}
					else
					{
						this._id_foreigner = default(int);
					}
					this.SendPropertyChanged("foreigners");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.document_type")]
	public partial class document_type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_doctype;
		
		private string _name_of_document_type;
		
		private EntitySet<identity_document> _identity_document;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_doctypeChanging(int value);
    partial void Onid_doctypeChanged();
    partial void Onname_of_document_typeChanging(string value);
    partial void Onname_of_document_typeChanged();
    #endregion
		
		public document_type()
		{
			this._identity_document = new EntitySet<identity_document>(new Action<identity_document>(this.attach_identity_document), new Action<identity_document>(this.detach_identity_document));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_doctype", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_doctype
		{
			get
			{
				return this._id_doctype;
			}
			set
			{
				if ((this._id_doctype != value))
				{
					this.Onid_doctypeChanging(value);
					this.SendPropertyChanging();
					this._id_doctype = value;
					this.SendPropertyChanged("id_doctype");
					this.Onid_doctypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_of_document_type", DbType="NVarChar(500)")]
		public string name_of_document_type
		{
			get
			{
				return this._name_of_document_type;
			}
			set
			{
				if ((this._name_of_document_type != value))
				{
					this.Onname_of_document_typeChanging(value);
					this.SendPropertyChanging();
					this._name_of_document_type = value;
					this.SendPropertyChanged("name_of_document_type");
					this.Onname_of_document_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="document_type_identity_document", Storage="_identity_document", ThisKey="id_doctype", OtherKey="document_typeid_doctype")]
		public EntitySet<identity_document> identity_document
		{
			get
			{
				return this._identity_document;
			}
			set
			{
				this._identity_document.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_identity_document(identity_document entity)
		{
			this.SendPropertyChanging();
			entity.document_type = this;
		}
		
		private void detach_identity_document(identity_document entity)
		{
			this.SendPropertyChanging();
			entity.document_type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.education")]
	public partial class education : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_education;
		
		private string _place_of_study;
		
		private string _faculty;
		
		private string _training_level;
		
		private EntitySet<education_foreigners> _education_foreigners;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_educationChanging(int value);
    partial void Onid_educationChanged();
    partial void Onplace_of_studyChanging(string value);
    partial void Onplace_of_studyChanged();
    partial void OnfacultyChanging(string value);
    partial void OnfacultyChanged();
    partial void Ontraining_levelChanging(string value);
    partial void Ontraining_levelChanged();
    #endregion
		
		public education()
		{
			this._education_foreigners = new EntitySet<education_foreigners>(new Action<education_foreigners>(this.attach_education_foreigners), new Action<education_foreigners>(this.detach_education_foreigners));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_education", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_education
		{
			get
			{
				return this._id_education;
			}
			set
			{
				if ((this._id_education != value))
				{
					this.Onid_educationChanging(value);
					this.SendPropertyChanging();
					this._id_education = value;
					this.SendPropertyChanged("id_education");
					this.Onid_educationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_place_of_study", DbType="NVarChar(255)")]
		public string place_of_study
		{
			get
			{
				return this._place_of_study;
			}
			set
			{
				if ((this._place_of_study != value))
				{
					this.Onplace_of_studyChanging(value);
					this.SendPropertyChanging();
					this._place_of_study = value;
					this.SendPropertyChanged("place_of_study");
					this.Onplace_of_studyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_faculty", DbType="NVarChar(255)")]
		public string faculty
		{
			get
			{
				return this._faculty;
			}
			set
			{
				if ((this._faculty != value))
				{
					this.OnfacultyChanging(value);
					this.SendPropertyChanging();
					this._faculty = value;
					this.SendPropertyChanged("faculty");
					this.OnfacultyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_training_level", DbType="NVarChar(255)")]
		public string training_level
		{
			get
			{
				return this._training_level;
			}
			set
			{
				if ((this._training_level != value))
				{
					this.Ontraining_levelChanging(value);
					this.SendPropertyChanging();
					this._training_level = value;
					this.SendPropertyChanged("training_level");
					this.Ontraining_levelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="education_education_foreigners", Storage="_education_foreigners", ThisKey="id_education", OtherKey="id_education")]
		public EntitySet<education_foreigners> education_foreigners
		{
			get
			{
				return this._education_foreigners;
			}
			set
			{
				this._education_foreigners.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_education_foreigners(education_foreigners entity)
		{
			this.SendPropertyChanging();
			entity.education = this;
		}
		
		private void detach_education_foreigners(education_foreigners entity)
		{
			this.SendPropertyChanging();
			entity.education = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.education_foreigners")]
	public partial class education_foreigners : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_education_foreigners;
		
		private int _id_education;
		
		private int _id_foreigner;
		
		private EntityRef<education> _education;
		
		private EntityRef<foreigners> _foreigners;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_education_foreignersChanging(int value);
    partial void Onid_education_foreignersChanged();
    partial void Onid_educationChanging(int value);
    partial void Onid_educationChanged();
    partial void Onid_foreignerChanging(int value);
    partial void Onid_foreignerChanged();
    #endregion
		
		public education_foreigners()
		{
			this._education = default(EntityRef<education>);
			this._foreigners = default(EntityRef<foreigners>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_education_foreigners", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_education_foreigners
		{
			get
			{
				return this._id_education_foreigners;
			}
			set
			{
				if ((this._id_education_foreigners != value))
				{
					this.Onid_education_foreignersChanging(value);
					this.SendPropertyChanging();
					this._id_education_foreigners = value;
					this.SendPropertyChanged("id_education_foreigners");
					this.Onid_education_foreignersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_education", DbType="Int NOT NULL")]
		public int id_education
		{
			get
			{
				return this._id_education;
			}
			set
			{
				if ((this._id_education != value))
				{
					if (this._education.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_educationChanging(value);
					this.SendPropertyChanging();
					this._id_education = value;
					this.SendPropertyChanged("id_education");
					this.Onid_educationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_foreigner", DbType="Int NOT NULL")]
		public int id_foreigner
		{
			get
			{
				return this._id_foreigner;
			}
			set
			{
				if ((this._id_foreigner != value))
				{
					if (this._foreigners.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_foreignerChanging(value);
					this.SendPropertyChanging();
					this._id_foreigner = value;
					this.SendPropertyChanged("id_foreigner");
					this.Onid_foreignerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="education_education_foreigners", Storage="_education", ThisKey="id_education", OtherKey="id_education", IsForeignKey=true)]
		public education education
		{
			get
			{
				return this._education.Entity;
			}
			set
			{
				education previousValue = this._education.Entity;
				if (((previousValue != value) 
							|| (this._education.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._education.Entity = null;
						previousValue.education_foreigners.Remove(this);
					}
					this._education.Entity = value;
					if ((value != null))
					{
						value.education_foreigners.Add(this);
						this._id_education = value.id_education;
					}
					else
					{
						this._id_education = default(int);
					}
					this.SendPropertyChanged("education");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="foreigners_education_foreigners", Storage="_foreigners", ThisKey="id_foreigner", OtherKey="id_foreigner", IsForeignKey=true)]
		public foreigners foreigners
		{
			get
			{
				return this._foreigners.Entity;
			}
			set
			{
				foreigners previousValue = this._foreigners.Entity;
				if (((previousValue != value) 
							|| (this._foreigners.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._foreigners.Entity = null;
						previousValue.education_foreigners.Remove(this);
					}
					this._foreigners.Entity = value;
					if ((value != null))
					{
						value.education_foreigners.Add(this);
						this._id_foreigner = value.id_foreigner;
					}
					else
					{
						this._id_foreigner = default(int);
					}
					this.SendPropertyChanged("foreigners");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.embassy")]
	public partial class embassy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_embassy;
		
		private string _name_of_embassy;
		
		private EntitySet<workplace> _workplace;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_embassyChanging(int value);
    partial void Onid_embassyChanged();
    partial void Onname_of_embassyChanging(string value);
    partial void Onname_of_embassyChanged();
    #endregion
		
		public embassy()
		{
			this._workplace = new EntitySet<workplace>(new Action<workplace>(this.attach_workplace), new Action<workplace>(this.detach_workplace));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_embassy", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_embassy
		{
			get
			{
				return this._id_embassy;
			}
			set
			{
				if ((this._id_embassy != value))
				{
					this.Onid_embassyChanging(value);
					this.SendPropertyChanging();
					this._id_embassy = value;
					this.SendPropertyChanged("id_embassy");
					this.Onid_embassyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_of_embassy", DbType="NVarChar(500)")]
		public string name_of_embassy
		{
			get
			{
				return this._name_of_embassy;
			}
			set
			{
				if ((this._name_of_embassy != value))
				{
					this.Onname_of_embassyChanging(value);
					this.SendPropertyChanging();
					this._name_of_embassy = value;
					this.SendPropertyChanged("name_of_embassy");
					this.Onname_of_embassyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="embassy_workplace", Storage="_workplace", ThisKey="id_embassy", OtherKey="embassyid_embassy")]
		public EntitySet<workplace> workplace
		{
			get
			{
				return this._workplace;
			}
			set
			{
				this._workplace.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_workplace(workplace entity)
		{
			this.SendPropertyChanging();
			entity.embassy = this;
		}
		
		private void detach_workplace(workplace entity)
		{
			this.SendPropertyChanging();
			entity.embassy = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.files")]
	public partial class files : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_file;
		
		private System.Data.Linq.Binary _documents;
		
		private string _address;
		
		private string _meta_data;
		
		private EntitySet<files_foreigners> _files_foreigners;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_fileChanging(int value);
    partial void Onid_fileChanged();
    partial void OndocumentsChanging(System.Data.Linq.Binary value);
    partial void OndocumentsChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void Onmeta_dataChanging(string value);
    partial void Onmeta_dataChanged();
    #endregion
		
		public files()
		{
			this._files_foreigners = new EntitySet<files_foreigners>(new Action<files_foreigners>(this.attach_files_foreigners), new Action<files_foreigners>(this.detach_files_foreigners));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_file", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_file
		{
			get
			{
				return this._id_file;
			}
			set
			{
				if ((this._id_file != value))
				{
					this.Onid_fileChanging(value);
					this.SendPropertyChanging();
					this._id_file = value;
					this.SendPropertyChanged("id_file");
					this.Onid_fileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_documents", DbType="VarBinary(MAX)", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary documents
		{
			get
			{
				return this._documents;
			}
			set
			{
				if ((this._documents != value))
				{
					this.OndocumentsChanging(value);
					this.SendPropertyChanging();
					this._documents = value;
					this.SendPropertyChanged("documents");
					this.OndocumentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(500)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meta_data", DbType="VarChar(MAX)")]
		public string meta_data
		{
			get
			{
				return this._meta_data;
			}
			set
			{
				if ((this._meta_data != value))
				{
					this.Onmeta_dataChanging(value);
					this.SendPropertyChanging();
					this._meta_data = value;
					this.SendPropertyChanged("meta_data");
					this.Onmeta_dataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="files_files_foreigners", Storage="_files_foreigners", ThisKey="id_file", OtherKey="id_file")]
		public EntitySet<files_foreigners> files_foreigners
		{
			get
			{
				return this._files_foreigners;
			}
			set
			{
				this._files_foreigners.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_files_foreigners(files_foreigners entity)
		{
			this.SendPropertyChanging();
			entity.files = this;
		}
		
		private void detach_files_foreigners(files_foreigners entity)
		{
			this.SendPropertyChanging();
			entity.files = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.files_foreigners")]
	public partial class files_foreigners : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_files_foreigners;
		
		private int _id_file;
		
		private int _id_foreigner;
		
		private EntityRef<files> _files;
		
		private EntityRef<foreigners> _foreigners;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_files_foreignersChanging(int value);
    partial void Onid_files_foreignersChanged();
    partial void Onid_fileChanging(int value);
    partial void Onid_fileChanged();
    partial void Onid_foreignerChanging(int value);
    partial void Onid_foreignerChanged();
    #endregion
		
		public files_foreigners()
		{
			this._files = default(EntityRef<files>);
			this._foreigners = default(EntityRef<foreigners>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_files_foreigners", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_files_foreigners
		{
			get
			{
				return this._id_files_foreigners;
			}
			set
			{
				if ((this._id_files_foreigners != value))
				{
					this.Onid_files_foreignersChanging(value);
					this.SendPropertyChanging();
					this._id_files_foreigners = value;
					this.SendPropertyChanged("id_files_foreigners");
					this.Onid_files_foreignersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_file", DbType="Int NOT NULL")]
		public int id_file
		{
			get
			{
				return this._id_file;
			}
			set
			{
				if ((this._id_file != value))
				{
					if (this._files.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_fileChanging(value);
					this.SendPropertyChanging();
					this._id_file = value;
					this.SendPropertyChanged("id_file");
					this.Onid_fileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_foreigner", DbType="Int NOT NULL")]
		public int id_foreigner
		{
			get
			{
				return this._id_foreigner;
			}
			set
			{
				if ((this._id_foreigner != value))
				{
					if (this._foreigners.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_foreignerChanging(value);
					this.SendPropertyChanging();
					this._id_foreigner = value;
					this.SendPropertyChanged("id_foreigner");
					this.Onid_foreignerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="files_files_foreigners", Storage="_files", ThisKey="id_file", OtherKey="id_file", IsForeignKey=true)]
		public files files
		{
			get
			{
				return this._files.Entity;
			}
			set
			{
				files previousValue = this._files.Entity;
				if (((previousValue != value) 
							|| (this._files.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._files.Entity = null;
						previousValue.files_foreigners.Remove(this);
					}
					this._files.Entity = value;
					if ((value != null))
					{
						value.files_foreigners.Add(this);
						this._id_file = value.id_file;
					}
					else
					{
						this._id_file = default(int);
					}
					this.SendPropertyChanged("files");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="foreigners_files_foreigners", Storage="_foreigners", ThisKey="id_foreigner", OtherKey="id_foreigner", IsForeignKey=true)]
		public foreigners foreigners
		{
			get
			{
				return this._foreigners.Entity;
			}
			set
			{
				foreigners previousValue = this._foreigners.Entity;
				if (((previousValue != value) 
							|| (this._foreigners.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._foreigners.Entity = null;
						previousValue.files_foreigners.Remove(this);
					}
					this._foreigners.Entity = value;
					if ((value != null))
					{
						value.files_foreigners.Add(this);
						this._id_foreigner = value.id_foreigner;
					}
					else
					{
						this._id_foreigner = default(int);
					}
					this.SendPropertyChanged("foreigners");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.foreigners")]
	public partial class foreigners : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_foreigner;
		
		private string _name_of_foreigner;
		
		private System.Nullable<System.DateTime> _birth_date;
		
		private string _blood_tipe;
		
		private System.Nullable<int> _weight_kg_;
		
		private string _health;
		
		private string _marital_status;
		
		private string _number_of_children;
		
		private string _national_day;
		
		private string _criminal_prosecution_in_the_country_of_permanent_residence;
		
		private string _participant_in_military_conflicts;
		
		private string _remarks;
		
		private System.Nullable<int> _nationalityid_nationality;
		
		private System.Nullable<int> _genderid_gender;
		
		private int _identity_documentid_document;
		
		private EntitySet<workplace_foreigners> _workplace_foreigners;
		
		private EntitySet<arrival_foreigners> _arrival_foreigners;
		
		private EntitySet<education_foreigners> _education_foreigners;
		
		private EntitySet<files_foreigners> _files_foreigners;
		
		private EntitySet<hobby_foreigners> _hobby_foreigners;
		
		private EntitySet<identity_document> _identity_document;
		
		private EntitySet<languages_foreigners> _languages_foreigners;
		
		private EntitySet<project_foreigners> _project_foreigners;
		
		private EntityRef<gender> _gender;
		
		private EntityRef<nationality> _nationality;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_foreignerChanging(int value);
    partial void Onid_foreignerChanged();
    partial void Onname_of_foreignerChanging(string value);
    partial void Onname_of_foreignerChanged();
    partial void Onbirth_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onbirth_dateChanged();
    partial void Onblood_tipeChanging(string value);
    partial void Onblood_tipeChanged();
    partial void Onweight_kg_Changing(System.Nullable<int> value);
    partial void Onweight_kg_Changed();
    partial void OnhealthChanging(string value);
    partial void OnhealthChanged();
    partial void Onmarital_statusChanging(string value);
    partial void Onmarital_statusChanged();
    partial void Onnumber_of_childrenChanging(string value);
    partial void Onnumber_of_childrenChanged();
    partial void Onnational_dayChanging(string value);
    partial void Onnational_dayChanged();
    partial void Oncriminal_prosecution_in_the_country_of_permanent_residenceChanging(string value);
    partial void Oncriminal_prosecution_in_the_country_of_permanent_residenceChanged();
    partial void Onparticipant_in_military_conflictsChanging(string value);
    partial void Onparticipant_in_military_conflictsChanged();
    partial void OnremarksChanging(string value);
    partial void OnremarksChanged();
    partial void Onnationalityid_nationalityChanging(System.Nullable<int> value);
    partial void Onnationalityid_nationalityChanged();
    partial void Ongenderid_genderChanging(System.Nullable<int> value);
    partial void Ongenderid_genderChanged();
    partial void Onidentity_documentid_documentChanging(int value);
    partial void Onidentity_documentid_documentChanged();
    #endregion
		
		public foreigners()
		{
			this._workplace_foreigners = new EntitySet<workplace_foreigners>(new Action<workplace_foreigners>(this.attach_workplace_foreigners), new Action<workplace_foreigners>(this.detach_workplace_foreigners));
			this._arrival_foreigners = new EntitySet<arrival_foreigners>(new Action<arrival_foreigners>(this.attach_arrival_foreigners), new Action<arrival_foreigners>(this.detach_arrival_foreigners));
			this._education_foreigners = new EntitySet<education_foreigners>(new Action<education_foreigners>(this.attach_education_foreigners), new Action<education_foreigners>(this.detach_education_foreigners));
			this._files_foreigners = new EntitySet<files_foreigners>(new Action<files_foreigners>(this.attach_files_foreigners), new Action<files_foreigners>(this.detach_files_foreigners));
			this._hobby_foreigners = new EntitySet<hobby_foreigners>(new Action<hobby_foreigners>(this.attach_hobby_foreigners), new Action<hobby_foreigners>(this.detach_hobby_foreigners));
			this._identity_document = new EntitySet<identity_document>(new Action<identity_document>(this.attach_identity_document), new Action<identity_document>(this.detach_identity_document));
			this._languages_foreigners = new EntitySet<languages_foreigners>(new Action<languages_foreigners>(this.attach_languages_foreigners), new Action<languages_foreigners>(this.detach_languages_foreigners));
			this._project_foreigners = new EntitySet<project_foreigners>(new Action<project_foreigners>(this.attach_project_foreigners), new Action<project_foreigners>(this.detach_project_foreigners));
			this._gender = default(EntityRef<gender>);
			this._nationality = default(EntityRef<nationality>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_foreigner", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_foreigner
		{
			get
			{
				return this._id_foreigner;
			}
			set
			{
				if ((this._id_foreigner != value))
				{
					this.Onid_foreignerChanging(value);
					this.SendPropertyChanging();
					this._id_foreigner = value;
					this.SendPropertyChanged("id_foreigner");
					this.Onid_foreignerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_of_foreigner", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string name_of_foreigner
		{
			get
			{
				return this._name_of_foreigner;
			}
			set
			{
				if ((this._name_of_foreigner != value))
				{
					this.Onname_of_foreignerChanging(value);
					this.SendPropertyChanging();
					this._name_of_foreigner = value;
					this.SendPropertyChanged("name_of_foreigner");
					this.Onname_of_foreignerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birth_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> birth_date
		{
			get
			{
				return this._birth_date;
			}
			set
			{
				if ((this._birth_date != value))
				{
					this.Onbirth_dateChanging(value);
					this.SendPropertyChanging();
					this._birth_date = value;
					this.SendPropertyChanged("birth_date");
					this.Onbirth_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_blood_tipe", DbType="VarChar(10)")]
		public string blood_tipe
		{
			get
			{
				return this._blood_tipe;
			}
			set
			{
				if ((this._blood_tipe != value))
				{
					this.Onblood_tipeChanging(value);
					this.SendPropertyChanging();
					this._blood_tipe = value;
					this.SendPropertyChanged("blood_tipe");
					this.Onblood_tipeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[weight(kg)]", Storage="_weight_kg_", DbType="Int")]
		public System.Nullable<int> weight_kg_
		{
			get
			{
				return this._weight_kg_;
			}
			set
			{
				if ((this._weight_kg_ != value))
				{
					this.Onweight_kg_Changing(value);
					this.SendPropertyChanging();
					this._weight_kg_ = value;
					this.SendPropertyChanged("weight_kg_");
					this.Onweight_kg_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_health", DbType="VarChar(255)")]
		public string health
		{
			get
			{
				return this._health;
			}
			set
			{
				if ((this._health != value))
				{
					this.OnhealthChanging(value);
					this.SendPropertyChanging();
					this._health = value;
					this.SendPropertyChanged("health");
					this.OnhealthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_marital_status", DbType="VarChar(255)")]
		public string marital_status
		{
			get
			{
				return this._marital_status;
			}
			set
			{
				if ((this._marital_status != value))
				{
					this.Onmarital_statusChanging(value);
					this.SendPropertyChanging();
					this._marital_status = value;
					this.SendPropertyChanged("marital_status");
					this.Onmarital_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_number_of_children", DbType="VarChar(255)")]
		public string number_of_children
		{
			get
			{
				return this._number_of_children;
			}
			set
			{
				if ((this._number_of_children != value))
				{
					this.Onnumber_of_childrenChanging(value);
					this.SendPropertyChanging();
					this._number_of_children = value;
					this.SendPropertyChanged("number_of_children");
					this.Onnumber_of_childrenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_national_day", DbType="VarChar(255)")]
		public string national_day
		{
			get
			{
				return this._national_day;
			}
			set
			{
				if ((this._national_day != value))
				{
					this.Onnational_dayChanging(value);
					this.SendPropertyChanging();
					this._national_day = value;
					this.SendPropertyChanged("national_day");
					this.Onnational_dayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_criminal_prosecution_in_the_country_of_permanent_residence", DbType="VarChar(500)")]
		public string criminal_prosecution_in_the_country_of_permanent_residence
		{
			get
			{
				return this._criminal_prosecution_in_the_country_of_permanent_residence;
			}
			set
			{
				if ((this._criminal_prosecution_in_the_country_of_permanent_residence != value))
				{
					this.Oncriminal_prosecution_in_the_country_of_permanent_residenceChanging(value);
					this.SendPropertyChanging();
					this._criminal_prosecution_in_the_country_of_permanent_residence = value;
					this.SendPropertyChanged("criminal_prosecution_in_the_country_of_permanent_residence");
					this.Oncriminal_prosecution_in_the_country_of_permanent_residenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_participant_in_military_conflicts", DbType="VarChar(500)")]
		public string participant_in_military_conflicts
		{
			get
			{
				return this._participant_in_military_conflicts;
			}
			set
			{
				if ((this._participant_in_military_conflicts != value))
				{
					this.Onparticipant_in_military_conflictsChanging(value);
					this.SendPropertyChanging();
					this._participant_in_military_conflicts = value;
					this.SendPropertyChanged("participant_in_military_conflicts");
					this.Onparticipant_in_military_conflictsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remarks", DbType="VarChar(1000)")]
		public string remarks
		{
			get
			{
				return this._remarks;
			}
			set
			{
				if ((this._remarks != value))
				{
					this.OnremarksChanging(value);
					this.SendPropertyChanging();
					this._remarks = value;
					this.SendPropertyChanged("remarks");
					this.OnremarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nationalityid_nationality", DbType="Int")]
		public System.Nullable<int> nationalityid_nationality
		{
			get
			{
				return this._nationalityid_nationality;
			}
			set
			{
				if ((this._nationalityid_nationality != value))
				{
					if (this._nationality.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onnationalityid_nationalityChanging(value);
					this.SendPropertyChanging();
					this._nationalityid_nationality = value;
					this.SendPropertyChanged("nationalityid_nationality");
					this.Onnationalityid_nationalityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_genderid_gender", DbType="Int")]
		public System.Nullable<int> genderid_gender
		{
			get
			{
				return this._genderid_gender;
			}
			set
			{
				if ((this._genderid_gender != value))
				{
					if (this._gender.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ongenderid_genderChanging(value);
					this.SendPropertyChanging();
					this._genderid_gender = value;
					this.SendPropertyChanged("genderid_gender");
					this.Ongenderid_genderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_identity_documentid_document", DbType="Int NOT NULL")]
		public int identity_documentid_document
		{
			get
			{
				return this._identity_documentid_document;
			}
			set
			{
				if ((this._identity_documentid_document != value))
				{
					this.Onidentity_documentid_documentChanging(value);
					this.SendPropertyChanging();
					this._identity_documentid_document = value;
					this.SendPropertyChanged("identity_documentid_document");
					this.Onidentity_documentid_documentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="foreigners_workplace_foreigners", Storage="_workplace_foreigners", ThisKey="id_foreigner", OtherKey="id_foreigner")]
		public EntitySet<workplace_foreigners> workplace_foreigners
		{
			get
			{
				return this._workplace_foreigners;
			}
			set
			{
				this._workplace_foreigners.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="foreigners_arrival_foreigners", Storage="_arrival_foreigners", ThisKey="id_foreigner", OtherKey="id_foreigner")]
		public EntitySet<arrival_foreigners> arrival_foreigners
		{
			get
			{
				return this._arrival_foreigners;
			}
			set
			{
				this._arrival_foreigners.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="foreigners_education_foreigners", Storage="_education_foreigners", ThisKey="id_foreigner", OtherKey="id_foreigner")]
		public EntitySet<education_foreigners> education_foreigners
		{
			get
			{
				return this._education_foreigners;
			}
			set
			{
				this._education_foreigners.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="foreigners_files_foreigners", Storage="_files_foreigners", ThisKey="id_foreigner", OtherKey="id_foreigner")]
		public EntitySet<files_foreigners> files_foreigners
		{
			get
			{
				return this._files_foreigners;
			}
			set
			{
				this._files_foreigners.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="foreigners_hobby_foreigners", Storage="_hobby_foreigners", ThisKey="id_foreigner", OtherKey="id_foreigner")]
		public EntitySet<hobby_foreigners> hobby_foreigners
		{
			get
			{
				return this._hobby_foreigners;
			}
			set
			{
				this._hobby_foreigners.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="foreigners_identity_document", Storage="_identity_document", ThisKey="id_foreigner", OtherKey="foreignersid_foreigner")]
		public EntitySet<identity_document> identity_document
		{
			get
			{
				return this._identity_document;
			}
			set
			{
				this._identity_document.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="foreigners_languages_foreigners", Storage="_languages_foreigners", ThisKey="id_foreigner", OtherKey="id_foreigner")]
		public EntitySet<languages_foreigners> languages_foreigners
		{
			get
			{
				return this._languages_foreigners;
			}
			set
			{
				this._languages_foreigners.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="foreigners_project_foreigners", Storage="_project_foreigners", ThisKey="id_foreigner", OtherKey="id_foreigner")]
		public EntitySet<project_foreigners> project_foreigners
		{
			get
			{
				return this._project_foreigners;
			}
			set
			{
				this._project_foreigners.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="gender_foreigners", Storage="_gender", ThisKey="genderid_gender", OtherKey="id_gender", IsForeignKey=true)]
		public gender gender
		{
			get
			{
				return this._gender.Entity;
			}
			set
			{
				gender previousValue = this._gender.Entity;
				if (((previousValue != value) 
							|| (this._gender.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._gender.Entity = null;
						previousValue.foreigners.Remove(this);
					}
					this._gender.Entity = value;
					if ((value != null))
					{
						value.foreigners.Add(this);
						this._genderid_gender = value.id_gender;
					}
					else
					{
						this._genderid_gender = default(Nullable<int>);
					}
					this.SendPropertyChanged("gender");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="nationality_foreigners", Storage="_nationality", ThisKey="nationalityid_nationality", OtherKey="id_nationality", IsForeignKey=true)]
		public nationality nationality
		{
			get
			{
				return this._nationality.Entity;
			}
			set
			{
				nationality previousValue = this._nationality.Entity;
				if (((previousValue != value) 
							|| (this._nationality.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._nationality.Entity = null;
						previousValue.foreigners.Remove(this);
					}
					this._nationality.Entity = value;
					if ((value != null))
					{
						value.foreigners.Add(this);
						this._nationalityid_nationality = value.id_nationality;
					}
					else
					{
						this._nationalityid_nationality = default(Nullable<int>);
					}
					this.SendPropertyChanged("nationality");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_workplace_foreigners(workplace_foreigners entity)
		{
			this.SendPropertyChanging();
			entity.foreigners = this;
		}
		
		private void detach_workplace_foreigners(workplace_foreigners entity)
		{
			this.SendPropertyChanging();
			entity.foreigners = null;
		}
		
		private void attach_arrival_foreigners(arrival_foreigners entity)
		{
			this.SendPropertyChanging();
			entity.foreigners = this;
		}
		
		private void detach_arrival_foreigners(arrival_foreigners entity)
		{
			this.SendPropertyChanging();
			entity.foreigners = null;
		}
		
		private void attach_education_foreigners(education_foreigners entity)
		{
			this.SendPropertyChanging();
			entity.foreigners = this;
		}
		
		private void detach_education_foreigners(education_foreigners entity)
		{
			this.SendPropertyChanging();
			entity.foreigners = null;
		}
		
		private void attach_files_foreigners(files_foreigners entity)
		{
			this.SendPropertyChanging();
			entity.foreigners = this;
		}
		
		private void detach_files_foreigners(files_foreigners entity)
		{
			this.SendPropertyChanging();
			entity.foreigners = null;
		}
		
		private void attach_hobby_foreigners(hobby_foreigners entity)
		{
			this.SendPropertyChanging();
			entity.foreigners = this;
		}
		
		private void detach_hobby_foreigners(hobby_foreigners entity)
		{
			this.SendPropertyChanging();
			entity.foreigners = null;
		}
		
		private void attach_identity_document(identity_document entity)
		{
			this.SendPropertyChanging();
			entity.foreigners = this;
		}
		
		private void detach_identity_document(identity_document entity)
		{
			this.SendPropertyChanging();
			entity.foreigners = null;
		}
		
		private void attach_languages_foreigners(languages_foreigners entity)
		{
			this.SendPropertyChanging();
			entity.foreigners = this;
		}
		
		private void detach_languages_foreigners(languages_foreigners entity)
		{
			this.SendPropertyChanging();
			entity.foreigners = null;
		}
		
		private void attach_project_foreigners(project_foreigners entity)
		{
			this.SendPropertyChanging();
			entity.foreigners = this;
		}
		
		private void detach_project_foreigners(project_foreigners entity)
		{
			this.SendPropertyChanging();
			entity.foreigners = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.gender")]
	public partial class gender : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_gender;
		
		private string _name_of_gender;
		
		private EntitySet<foreigners> _foreigners;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_genderChanging(int value);
    partial void Onid_genderChanged();
    partial void Onname_of_genderChanging(string value);
    partial void Onname_of_genderChanged();
    #endregion
		
		public gender()
		{
			this._foreigners = new EntitySet<foreigners>(new Action<foreigners>(this.attach_foreigners), new Action<foreigners>(this.detach_foreigners));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_gender", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_gender
		{
			get
			{
				return this._id_gender;
			}
			set
			{
				if ((this._id_gender != value))
				{
					this.Onid_genderChanging(value);
					this.SendPropertyChanging();
					this._id_gender = value;
					this.SendPropertyChanged("id_gender");
					this.Onid_genderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_of_gender", DbType="NVarChar(500)")]
		public string name_of_gender
		{
			get
			{
				return this._name_of_gender;
			}
			set
			{
				if ((this._name_of_gender != value))
				{
					this.Onname_of_genderChanging(value);
					this.SendPropertyChanging();
					this._name_of_gender = value;
					this.SendPropertyChanged("name_of_gender");
					this.Onname_of_genderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="gender_foreigners", Storage="_foreigners", ThisKey="id_gender", OtherKey="genderid_gender")]
		public EntitySet<foreigners> foreigners
		{
			get
			{
				return this._foreigners;
			}
			set
			{
				this._foreigners.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_foreigners(foreigners entity)
		{
			this.SendPropertyChanging();
			entity.gender = this;
		}
		
		private void detach_foreigners(foreigners entity)
		{
			this.SendPropertyChanging();
			entity.gender = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.hobby")]
	public partial class hobby : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_hobby;
		
		private string _name_of_hobby;
		
		private EntitySet<hobby_foreigners> _hobby_foreigners;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_hobbyChanging(int value);
    partial void Onid_hobbyChanged();
    partial void Onname_of_hobbyChanging(string value);
    partial void Onname_of_hobbyChanged();
    #endregion
		
		public hobby()
		{
			this._hobby_foreigners = new EntitySet<hobby_foreigners>(new Action<hobby_foreigners>(this.attach_hobby_foreigners), new Action<hobby_foreigners>(this.detach_hobby_foreigners));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_hobby", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_hobby
		{
			get
			{
				return this._id_hobby;
			}
			set
			{
				if ((this._id_hobby != value))
				{
					this.Onid_hobbyChanging(value);
					this.SendPropertyChanging();
					this._id_hobby = value;
					this.SendPropertyChanged("id_hobby");
					this.Onid_hobbyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_of_hobby", DbType="NVarChar(500)")]
		public string name_of_hobby
		{
			get
			{
				return this._name_of_hobby;
			}
			set
			{
				if ((this._name_of_hobby != value))
				{
					this.Onname_of_hobbyChanging(value);
					this.SendPropertyChanging();
					this._name_of_hobby = value;
					this.SendPropertyChanged("name_of_hobby");
					this.Onname_of_hobbyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="hobby_hobby_foreigners", Storage="_hobby_foreigners", ThisKey="id_hobby", OtherKey="id_hobby")]
		public EntitySet<hobby_foreigners> hobby_foreigners
		{
			get
			{
				return this._hobby_foreigners;
			}
			set
			{
				this._hobby_foreigners.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_hobby_foreigners(hobby_foreigners entity)
		{
			this.SendPropertyChanging();
			entity.hobby = this;
		}
		
		private void detach_hobby_foreigners(hobby_foreigners entity)
		{
			this.SendPropertyChanging();
			entity.hobby = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.hobby_foreigners")]
	public partial class hobby_foreigners : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_hobby_foreigners;
		
		private int _id_hobby;
		
		private int _id_foreigner;
		
		private EntityRef<hobby> _hobby;
		
		private EntityRef<foreigners> _foreigners;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_hobby_foreignersChanging(int value);
    partial void Onid_hobby_foreignersChanged();
    partial void Onid_hobbyChanging(int value);
    partial void Onid_hobbyChanged();
    partial void Onid_foreignerChanging(int value);
    partial void Onid_foreignerChanged();
    #endregion
		
		public hobby_foreigners()
		{
			this._hobby = default(EntityRef<hobby>);
			this._foreigners = default(EntityRef<foreigners>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_hobby_foreigners", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_hobby_foreigners
		{
			get
			{
				return this._id_hobby_foreigners;
			}
			set
			{
				if ((this._id_hobby_foreigners != value))
				{
					this.Onid_hobby_foreignersChanging(value);
					this.SendPropertyChanging();
					this._id_hobby_foreigners = value;
					this.SendPropertyChanged("id_hobby_foreigners");
					this.Onid_hobby_foreignersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_hobby", DbType="Int NOT NULL")]
		public int id_hobby
		{
			get
			{
				return this._id_hobby;
			}
			set
			{
				if ((this._id_hobby != value))
				{
					if (this._hobby.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_hobbyChanging(value);
					this.SendPropertyChanging();
					this._id_hobby = value;
					this.SendPropertyChanged("id_hobby");
					this.Onid_hobbyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_foreigner", DbType="Int NOT NULL")]
		public int id_foreigner
		{
			get
			{
				return this._id_foreigner;
			}
			set
			{
				if ((this._id_foreigner != value))
				{
					if (this._foreigners.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_foreignerChanging(value);
					this.SendPropertyChanging();
					this._id_foreigner = value;
					this.SendPropertyChanged("id_foreigner");
					this.Onid_foreignerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="hobby_hobby_foreigners", Storage="_hobby", ThisKey="id_hobby", OtherKey="id_hobby", IsForeignKey=true)]
		public hobby hobby
		{
			get
			{
				return this._hobby.Entity;
			}
			set
			{
				hobby previousValue = this._hobby.Entity;
				if (((previousValue != value) 
							|| (this._hobby.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._hobby.Entity = null;
						previousValue.hobby_foreigners.Remove(this);
					}
					this._hobby.Entity = value;
					if ((value != null))
					{
						value.hobby_foreigners.Add(this);
						this._id_hobby = value.id_hobby;
					}
					else
					{
						this._id_hobby = default(int);
					}
					this.SendPropertyChanged("hobby");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="foreigners_hobby_foreigners", Storage="_foreigners", ThisKey="id_foreigner", OtherKey="id_foreigner", IsForeignKey=true)]
		public foreigners foreigners
		{
			get
			{
				return this._foreigners.Entity;
			}
			set
			{
				foreigners previousValue = this._foreigners.Entity;
				if (((previousValue != value) 
							|| (this._foreigners.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._foreigners.Entity = null;
						previousValue.hobby_foreigners.Remove(this);
					}
					this._foreigners.Entity = value;
					if ((value != null))
					{
						value.hobby_foreigners.Add(this);
						this._id_foreigner = value.id_foreigner;
					}
					else
					{
						this._id_foreigner = default(int);
					}
					this.SendPropertyChanged("foreigners");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.host_country")]
	public partial class host_country : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_host_country;
		
		private string _name_of_country;
		
		private EntitySet<arrival> _arrival;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_host_countryChanging(int value);
    partial void Onid_host_countryChanged();
    partial void Onname_of_countryChanging(string value);
    partial void Onname_of_countryChanged();
    #endregion
		
		public host_country()
		{
			this._arrival = new EntitySet<arrival>(new Action<arrival>(this.attach_arrival), new Action<arrival>(this.detach_arrival));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_host_country", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_host_country
		{
			get
			{
				return this._id_host_country;
			}
			set
			{
				if ((this._id_host_country != value))
				{
					this.Onid_host_countryChanging(value);
					this.SendPropertyChanging();
					this._id_host_country = value;
					this.SendPropertyChanged("id_host_country");
					this.Onid_host_countryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_of_country", DbType="NVarChar(500)")]
		public string name_of_country
		{
			get
			{
				return this._name_of_country;
			}
			set
			{
				if ((this._name_of_country != value))
				{
					this.Onname_of_countryChanging(value);
					this.SendPropertyChanging();
					this._name_of_country = value;
					this.SendPropertyChanged("name_of_country");
					this.Onname_of_countryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="host_country_arrival", Storage="_arrival", ThisKey="id_host_country", OtherKey="host_countryid_host_country")]
		public EntitySet<arrival> arrival
		{
			get
			{
				return this._arrival;
			}
			set
			{
				this._arrival.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_arrival(arrival entity)
		{
			this.SendPropertyChanging();
			entity.host_country = this;
		}
		
		private void detach_arrival(arrival entity)
		{
			this.SendPropertyChanging();
			entity.host_country = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.identity_document")]
	public partial class identity_document : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_document;
		
		private System.Nullable<System.DateTime> _date_of_issue;
		
		private System.Nullable<System.DateTime> _validity_period;
		
		private string _serial_number_of_document;
		
		private int _foreignersid_foreigner;
		
		private int _document_typeid_doctype;
		
		private EntityRef<foreigners> _foreigners;
		
		private EntityRef<document_type> _document_type;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_documentChanging(int value);
    partial void Onid_documentChanged();
    partial void Ondate_of_issueChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_of_issueChanged();
    partial void Onvalidity_periodChanging(System.Nullable<System.DateTime> value);
    partial void Onvalidity_periodChanged();
    partial void Onserial_number_of_documentChanging(string value);
    partial void Onserial_number_of_documentChanged();
    partial void Onforeignersid_foreignerChanging(int value);
    partial void Onforeignersid_foreignerChanged();
    partial void Ondocument_typeid_doctypeChanging(int value);
    partial void Ondocument_typeid_doctypeChanged();
    #endregion
		
		public identity_document()
		{
			this._foreigners = default(EntityRef<foreigners>);
			this._document_type = default(EntityRef<document_type>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_document", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_document
		{
			get
			{
				return this._id_document;
			}
			set
			{
				if ((this._id_document != value))
				{
					this.Onid_documentChanging(value);
					this.SendPropertyChanging();
					this._id_document = value;
					this.SendPropertyChanged("id_document");
					this.Onid_documentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_of_issue", DbType="DateTime")]
		public System.Nullable<System.DateTime> date_of_issue
		{
			get
			{
				return this._date_of_issue;
			}
			set
			{
				if ((this._date_of_issue != value))
				{
					this.Ondate_of_issueChanging(value);
					this.SendPropertyChanging();
					this._date_of_issue = value;
					this.SendPropertyChanged("date_of_issue");
					this.Ondate_of_issueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_validity_period", DbType="DateTime")]
		public System.Nullable<System.DateTime> validity_period
		{
			get
			{
				return this._validity_period;
			}
			set
			{
				if ((this._validity_period != value))
				{
					this.Onvalidity_periodChanging(value);
					this.SendPropertyChanging();
					this._validity_period = value;
					this.SendPropertyChanged("validity_period");
					this.Onvalidity_periodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serial_number_of_document", DbType="NVarChar(255)")]
		public string serial_number_of_document
		{
			get
			{
				return this._serial_number_of_document;
			}
			set
			{
				if ((this._serial_number_of_document != value))
				{
					this.Onserial_number_of_documentChanging(value);
					this.SendPropertyChanging();
					this._serial_number_of_document = value;
					this.SendPropertyChanged("serial_number_of_document");
					this.Onserial_number_of_documentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foreignersid_foreigner", DbType="Int NOT NULL")]
		public int foreignersid_foreigner
		{
			get
			{
				return this._foreignersid_foreigner;
			}
			set
			{
				if ((this._foreignersid_foreigner != value))
				{
					if (this._foreigners.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onforeignersid_foreignerChanging(value);
					this.SendPropertyChanging();
					this._foreignersid_foreigner = value;
					this.SendPropertyChanged("foreignersid_foreigner");
					this.Onforeignersid_foreignerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_document_typeid_doctype", DbType="Int NOT NULL")]
		public int document_typeid_doctype
		{
			get
			{
				return this._document_typeid_doctype;
			}
			set
			{
				if ((this._document_typeid_doctype != value))
				{
					if (this._document_type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondocument_typeid_doctypeChanging(value);
					this.SendPropertyChanging();
					this._document_typeid_doctype = value;
					this.SendPropertyChanged("document_typeid_doctype");
					this.Ondocument_typeid_doctypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="foreigners_identity_document", Storage="_foreigners", ThisKey="foreignersid_foreigner", OtherKey="id_foreigner", IsForeignKey=true)]
		public foreigners foreigners
		{
			get
			{
				return this._foreigners.Entity;
			}
			set
			{
				foreigners previousValue = this._foreigners.Entity;
				if (((previousValue != value) 
							|| (this._foreigners.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._foreigners.Entity = null;
						previousValue.identity_document.Remove(this);
					}
					this._foreigners.Entity = value;
					if ((value != null))
					{
						value.identity_document.Add(this);
						this._foreignersid_foreigner = value.id_foreigner;
					}
					else
					{
						this._foreignersid_foreigner = default(int);
					}
					this.SendPropertyChanged("foreigners");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="document_type_identity_document", Storage="_document_type", ThisKey="document_typeid_doctype", OtherKey="id_doctype", IsForeignKey=true)]
		public document_type document_type
		{
			get
			{
				return this._document_type.Entity;
			}
			set
			{
				document_type previousValue = this._document_type.Entity;
				if (((previousValue != value) 
							|| (this._document_type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._document_type.Entity = null;
						previousValue.identity_document.Remove(this);
					}
					this._document_type.Entity = value;
					if ((value != null))
					{
						value.identity_document.Add(this);
						this._document_typeid_doctype = value.id_doctype;
					}
					else
					{
						this._document_typeid_doctype = default(int);
					}
					this.SendPropertyChanged("document_type");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.languages")]
	public partial class languages : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_language;
		
		private string _name_of_language;
		
		private EntitySet<languages_foreigners> _languages_foreigners;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_languageChanging(int value);
    partial void Onid_languageChanged();
    partial void Onname_of_languageChanging(string value);
    partial void Onname_of_languageChanged();
    #endregion
		
		public languages()
		{
			this._languages_foreigners = new EntitySet<languages_foreigners>(new Action<languages_foreigners>(this.attach_languages_foreigners), new Action<languages_foreigners>(this.detach_languages_foreigners));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_language", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_language
		{
			get
			{
				return this._id_language;
			}
			set
			{
				if ((this._id_language != value))
				{
					this.Onid_languageChanging(value);
					this.SendPropertyChanging();
					this._id_language = value;
					this.SendPropertyChanged("id_language");
					this.Onid_languageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_of_language", DbType="NVarChar(500)")]
		public string name_of_language
		{
			get
			{
				return this._name_of_language;
			}
			set
			{
				if ((this._name_of_language != value))
				{
					this.Onname_of_languageChanging(value);
					this.SendPropertyChanging();
					this._name_of_language = value;
					this.SendPropertyChanged("name_of_language");
					this.Onname_of_languageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="languages_languages_foreigners", Storage="_languages_foreigners", ThisKey="id_language", OtherKey="id_language")]
		public EntitySet<languages_foreigners> languages_foreigners
		{
			get
			{
				return this._languages_foreigners;
			}
			set
			{
				this._languages_foreigners.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_languages_foreigners(languages_foreigners entity)
		{
			this.SendPropertyChanging();
			entity.languages = this;
		}
		
		private void detach_languages_foreigners(languages_foreigners entity)
		{
			this.SendPropertyChanging();
			entity.languages = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.languages_foreigners")]
	public partial class languages_foreigners : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_languages_foreigners;
		
		private int _id_language;
		
		private int _id_foreigner;
		
		private EntityRef<languages> _languages;
		
		private EntityRef<foreigners> _foreigners;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_languages_foreignersChanging(int value);
    partial void Onid_languages_foreignersChanged();
    partial void Onid_languageChanging(int value);
    partial void Onid_languageChanged();
    partial void Onid_foreignerChanging(int value);
    partial void Onid_foreignerChanged();
    #endregion
		
		public languages_foreigners()
		{
			this._languages = default(EntityRef<languages>);
			this._foreigners = default(EntityRef<foreigners>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_languages_foreigners", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_languages_foreigners
		{
			get
			{
				return this._id_languages_foreigners;
			}
			set
			{
				if ((this._id_languages_foreigners != value))
				{
					this.Onid_languages_foreignersChanging(value);
					this.SendPropertyChanging();
					this._id_languages_foreigners = value;
					this.SendPropertyChanged("id_languages_foreigners");
					this.Onid_languages_foreignersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_language", DbType="Int NOT NULL")]
		public int id_language
		{
			get
			{
				return this._id_language;
			}
			set
			{
				if ((this._id_language != value))
				{
					if (this._languages.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_languageChanging(value);
					this.SendPropertyChanging();
					this._id_language = value;
					this.SendPropertyChanged("id_language");
					this.Onid_languageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_foreigner", DbType="Int NOT NULL")]
		public int id_foreigner
		{
			get
			{
				return this._id_foreigner;
			}
			set
			{
				if ((this._id_foreigner != value))
				{
					if (this._foreigners.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_foreignerChanging(value);
					this.SendPropertyChanging();
					this._id_foreigner = value;
					this.SendPropertyChanged("id_foreigner");
					this.Onid_foreignerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="languages_languages_foreigners", Storage="_languages", ThisKey="id_language", OtherKey="id_language", IsForeignKey=true)]
		public languages languages
		{
			get
			{
				return this._languages.Entity;
			}
			set
			{
				languages previousValue = this._languages.Entity;
				if (((previousValue != value) 
							|| (this._languages.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._languages.Entity = null;
						previousValue.languages_foreigners.Remove(this);
					}
					this._languages.Entity = value;
					if ((value != null))
					{
						value.languages_foreigners.Add(this);
						this._id_language = value.id_language;
					}
					else
					{
						this._id_language = default(int);
					}
					this.SendPropertyChanged("languages");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="foreigners_languages_foreigners", Storage="_foreigners", ThisKey="id_foreigner", OtherKey="id_foreigner", IsForeignKey=true)]
		public foreigners foreigners
		{
			get
			{
				return this._foreigners.Entity;
			}
			set
			{
				foreigners previousValue = this._foreigners.Entity;
				if (((previousValue != value) 
							|| (this._foreigners.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._foreigners.Entity = null;
						previousValue.languages_foreigners.Remove(this);
					}
					this._foreigners.Entity = value;
					if ((value != null))
					{
						value.languages_foreigners.Add(this);
						this._id_foreigner = value.id_foreigner;
					}
					else
					{
						this._id_foreigner = default(int);
					}
					this.SendPropertyChanged("foreigners");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.nationality")]
	public partial class nationality : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_nationality;
		
		private string _name_of_nationality;
		
		private EntitySet<foreigners> _foreigners;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_nationalityChanging(int value);
    partial void Onid_nationalityChanged();
    partial void Onname_of_nationalityChanging(string value);
    partial void Onname_of_nationalityChanged();
    #endregion
		
		public nationality()
		{
			this._foreigners = new EntitySet<foreigners>(new Action<foreigners>(this.attach_foreigners), new Action<foreigners>(this.detach_foreigners));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_nationality", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_nationality
		{
			get
			{
				return this._id_nationality;
			}
			set
			{
				if ((this._id_nationality != value))
				{
					this.Onid_nationalityChanging(value);
					this.SendPropertyChanging();
					this._id_nationality = value;
					this.SendPropertyChanged("id_nationality");
					this.Onid_nationalityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_of_nationality", DbType="NVarChar(500)")]
		public string name_of_nationality
		{
			get
			{
				return this._name_of_nationality;
			}
			set
			{
				if ((this._name_of_nationality != value))
				{
					this.Onname_of_nationalityChanging(value);
					this.SendPropertyChanging();
					this._name_of_nationality = value;
					this.SendPropertyChanged("name_of_nationality");
					this.Onname_of_nationalityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="nationality_foreigners", Storage="_foreigners", ThisKey="id_nationality", OtherKey="nationalityid_nationality")]
		public EntitySet<foreigners> foreigners
		{
			get
			{
				return this._foreigners;
			}
			set
			{
				this._foreigners.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_foreigners(foreigners entity)
		{
			this.SendPropertyChanging();
			entity.nationality = this;
		}
		
		private void detach_foreigners(foreigners entity)
		{
			this.SendPropertyChanging();
			entity.nationality = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.project")]
	public partial class project : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_project;
		
		private string _name_of_project;
		
		private string _nature_description_of_project;
		
		private string _project_details;
		
		private System.Nullable<int> _id_workplace;
		
		private EntitySet<project_foreigners> _project_foreigners;
		
		private EntityRef<workplace> _workplace;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_projectChanging(int value);
    partial void Onid_projectChanged();
    partial void Onname_of_projectChanging(string value);
    partial void Onname_of_projectChanged();
    partial void Onnature_description_of_projectChanging(string value);
    partial void Onnature_description_of_projectChanged();
    partial void Onproject_detailsChanging(string value);
    partial void Onproject_detailsChanged();
    partial void Onid_workplaceChanging(System.Nullable<int> value);
    partial void Onid_workplaceChanged();
    #endregion
		
		public project()
		{
			this._project_foreigners = new EntitySet<project_foreigners>(new Action<project_foreigners>(this.attach_project_foreigners), new Action<project_foreigners>(this.detach_project_foreigners));
			this._workplace = default(EntityRef<workplace>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_project", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_project
		{
			get
			{
				return this._id_project;
			}
			set
			{
				if ((this._id_project != value))
				{
					this.Onid_projectChanging(value);
					this.SendPropertyChanging();
					this._id_project = value;
					this.SendPropertyChanged("id_project");
					this.Onid_projectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_of_project", DbType="NVarChar(500)")]
		public string name_of_project
		{
			get
			{
				return this._name_of_project;
			}
			set
			{
				if ((this._name_of_project != value))
				{
					this.Onname_of_projectChanging(value);
					this.SendPropertyChanging();
					this._name_of_project = value;
					this.SendPropertyChanged("name_of_project");
					this.Onname_of_projectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[nature/description_of_project]", Storage="_nature_description_of_project", DbType="NVarChar(500)")]
		public string nature_description_of_project
		{
			get
			{
				return this._nature_description_of_project;
			}
			set
			{
				if ((this._nature_description_of_project != value))
				{
					this.Onnature_description_of_projectChanging(value);
					this.SendPropertyChanging();
					this._nature_description_of_project = value;
					this.SendPropertyChanged("nature_description_of_project");
					this.Onnature_description_of_projectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_project_details", DbType="NVarChar(500)")]
		public string project_details
		{
			get
			{
				return this._project_details;
			}
			set
			{
				if ((this._project_details != value))
				{
					this.Onproject_detailsChanging(value);
					this.SendPropertyChanging();
					this._project_details = value;
					this.SendPropertyChanged("project_details");
					this.Onproject_detailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_workplace", DbType="Int")]
		public System.Nullable<int> id_workplace
		{
			get
			{
				return this._id_workplace;
			}
			set
			{
				if ((this._id_workplace != value))
				{
					if (this._workplace.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_workplaceChanging(value);
					this.SendPropertyChanging();
					this._id_workplace = value;
					this.SendPropertyChanged("id_workplace");
					this.Onid_workplaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="project_project_foreigners", Storage="_project_foreigners", ThisKey="id_project", OtherKey="id_project")]
		public EntitySet<project_foreigners> project_foreigners
		{
			get
			{
				return this._project_foreigners;
			}
			set
			{
				this._project_foreigners.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="workplace_project", Storage="_workplace", ThisKey="id_workplace", OtherKey="id_workplace", IsForeignKey=true)]
		public workplace workplace
		{
			get
			{
				return this._workplace.Entity;
			}
			set
			{
				workplace previousValue = this._workplace.Entity;
				if (((previousValue != value) 
							|| (this._workplace.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._workplace.Entity = null;
						previousValue.project.Remove(this);
					}
					this._workplace.Entity = value;
					if ((value != null))
					{
						value.project.Add(this);
						this._id_workplace = value.id_workplace;
					}
					else
					{
						this._id_workplace = default(Nullable<int>);
					}
					this.SendPropertyChanged("workplace");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_project_foreigners(project_foreigners entity)
		{
			this.SendPropertyChanging();
			entity.project = this;
		}
		
		private void detach_project_foreigners(project_foreigners entity)
		{
			this.SendPropertyChanging();
			entity.project = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.project_foreigners")]
	public partial class project_foreigners : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_project_foreigners;
		
		private int _id_project;
		
		private int _id_foreigner;
		
		private EntityRef<foreigners> _foreigners;
		
		private EntityRef<project> _project;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_project_foreignersChanging(int value);
    partial void Onid_project_foreignersChanged();
    partial void Onid_projectChanging(int value);
    partial void Onid_projectChanged();
    partial void Onid_foreignerChanging(int value);
    partial void Onid_foreignerChanged();
    #endregion
		
		public project_foreigners()
		{
			this._foreigners = default(EntityRef<foreigners>);
			this._project = default(EntityRef<project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_project_foreigners", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_project_foreigners
		{
			get
			{
				return this._id_project_foreigners;
			}
			set
			{
				if ((this._id_project_foreigners != value))
				{
					this.Onid_project_foreignersChanging(value);
					this.SendPropertyChanging();
					this._id_project_foreigners = value;
					this.SendPropertyChanged("id_project_foreigners");
					this.Onid_project_foreignersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_project", DbType="Int NOT NULL")]
		public int id_project
		{
			get
			{
				return this._id_project;
			}
			set
			{
				if ((this._id_project != value))
				{
					if (this._project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_projectChanging(value);
					this.SendPropertyChanging();
					this._id_project = value;
					this.SendPropertyChanged("id_project");
					this.Onid_projectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_foreigner", DbType="Int NOT NULL")]
		public int id_foreigner
		{
			get
			{
				return this._id_foreigner;
			}
			set
			{
				if ((this._id_foreigner != value))
				{
					if (this._foreigners.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_foreignerChanging(value);
					this.SendPropertyChanging();
					this._id_foreigner = value;
					this.SendPropertyChanged("id_foreigner");
					this.Onid_foreignerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="foreigners_project_foreigners", Storage="_foreigners", ThisKey="id_foreigner", OtherKey="id_foreigner", IsForeignKey=true)]
		public foreigners foreigners
		{
			get
			{
				return this._foreigners.Entity;
			}
			set
			{
				foreigners previousValue = this._foreigners.Entity;
				if (((previousValue != value) 
							|| (this._foreigners.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._foreigners.Entity = null;
						previousValue.project_foreigners.Remove(this);
					}
					this._foreigners.Entity = value;
					if ((value != null))
					{
						value.project_foreigners.Add(this);
						this._id_foreigner = value.id_foreigner;
					}
					else
					{
						this._id_foreigner = default(int);
					}
					this.SendPropertyChanged("foreigners");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="project_project_foreigners", Storage="_project", ThisKey="id_project", OtherKey="id_project", IsForeignKey=true)]
		public project project
		{
			get
			{
				return this._project.Entity;
			}
			set
			{
				project previousValue = this._project.Entity;
				if (((previousValue != value) 
							|| (this._project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._project.Entity = null;
						previousValue.project_foreigners.Remove(this);
					}
					this._project.Entity = value;
					if ((value != null))
					{
						value.project_foreigners.Add(this);
						this._id_project = value.id_project;
					}
					else
					{
						this._id_project = default(int);
					}
					this.SendPropertyChanged("project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.purpose")]
	public partial class purpose : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_purpose;
		
		private string _name_of_purpose;
		
		private EntitySet<arrival> _arrival;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_purposeChanging(int value);
    partial void Onid_purposeChanged();
    partial void Onname_of_purposeChanging(string value);
    partial void Onname_of_purposeChanged();
    #endregion
		
		public purpose()
		{
			this._arrival = new EntitySet<arrival>(new Action<arrival>(this.attach_arrival), new Action<arrival>(this.detach_arrival));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_purpose", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_purpose
		{
			get
			{
				return this._id_purpose;
			}
			set
			{
				if ((this._id_purpose != value))
				{
					this.Onid_purposeChanging(value);
					this.SendPropertyChanging();
					this._id_purpose = value;
					this.SendPropertyChanged("id_purpose");
					this.Onid_purposeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_of_purpose", DbType="NVarChar(500)")]
		public string name_of_purpose
		{
			get
			{
				return this._name_of_purpose;
			}
			set
			{
				if ((this._name_of_purpose != value))
				{
					this.Onname_of_purposeChanging(value);
					this.SendPropertyChanging();
					this._name_of_purpose = value;
					this.SendPropertyChanged("name_of_purpose");
					this.Onname_of_purposeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="purpose_arrival", Storage="_arrival", ThisKey="id_purpose", OtherKey="purposeid_purpose")]
		public EntitySet<arrival> arrival
		{
			get
			{
				return this._arrival;
			}
			set
			{
				this._arrival.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_arrival(arrival entity)
		{
			this.SendPropertyChanging();
			entity.purpose = this;
		}
		
		private void detach_arrival(arrival entity)
		{
			this.SendPropertyChanging();
			entity.purpose = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.workplace")]
	public partial class workplace : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_workplace;
		
		private string _name_of_company;
		
		private string _division_department_direction;
		
		private string _position;
		
		private string _military_rank;
		
		private string _office_hours;
		
		private string _number_fax;
		
		private string _email;
		
		private string _residential_address;
		
		private System.Nullable<int> _id_arrival;
		
		private System.Nullable<int> _embassyid_embassy;
		
		private EntitySet<workplace_foreigners> _workplace_foreigners;
		
		private EntitySet<project> _project;
		
		private EntityRef<embassy> _embassy;
		
		private EntityRef<arrival> _arrival;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_workplaceChanging(int value);
    partial void Onid_workplaceChanged();
    partial void Onname_of_companyChanging(string value);
    partial void Onname_of_companyChanged();
    partial void Ondivision_department_directionChanging(string value);
    partial void Ondivision_department_directionChanged();
    partial void OnpositionChanging(string value);
    partial void OnpositionChanged();
    partial void Onmilitary_rankChanging(string value);
    partial void Onmilitary_rankChanged();
    partial void Onoffice_hoursChanging(string value);
    partial void Onoffice_hoursChanged();
    partial void Onnumber_faxChanging(string value);
    partial void Onnumber_faxChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void Onresidential_addressChanging(string value);
    partial void Onresidential_addressChanged();
    partial void Onid_arrivalChanging(System.Nullable<int> value);
    partial void Onid_arrivalChanged();
    partial void Onembassyid_embassyChanging(System.Nullable<int> value);
    partial void Onembassyid_embassyChanged();
    #endregion
		
		public workplace()
		{
			this._workplace_foreigners = new EntitySet<workplace_foreigners>(new Action<workplace_foreigners>(this.attach_workplace_foreigners), new Action<workplace_foreigners>(this.detach_workplace_foreigners));
			this._project = new EntitySet<project>(new Action<project>(this.attach_project), new Action<project>(this.detach_project));
			this._embassy = default(EntityRef<embassy>);
			this._arrival = default(EntityRef<arrival>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_workplace", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_workplace
		{
			get
			{
				return this._id_workplace;
			}
			set
			{
				if ((this._id_workplace != value))
				{
					this.Onid_workplaceChanging(value);
					this.SendPropertyChanging();
					this._id_workplace = value;
					this.SendPropertyChanged("id_workplace");
					this.Onid_workplaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_of_company", DbType="NVarChar(255)")]
		public string name_of_company
		{
			get
			{
				return this._name_of_company;
			}
			set
			{
				if ((this._name_of_company != value))
				{
					this.Onname_of_companyChanging(value);
					this.SendPropertyChanging();
					this._name_of_company = value;
					this.SendPropertyChanged("name_of_company");
					this.Onname_of_companyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[division/department/direction]", Storage="_division_department_direction", DbType="NVarChar(255)")]
		public string division_department_direction
		{
			get
			{
				return this._division_department_direction;
			}
			set
			{
				if ((this._division_department_direction != value))
				{
					this.Ondivision_department_directionChanging(value);
					this.SendPropertyChanging();
					this._division_department_direction = value;
					this.SendPropertyChanged("division_department_direction");
					this.Ondivision_department_directionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_position", DbType="NVarChar(255)")]
		public string position
		{
			get
			{
				return this._position;
			}
			set
			{
				if ((this._position != value))
				{
					this.OnpositionChanging(value);
					this.SendPropertyChanging();
					this._position = value;
					this.SendPropertyChanged("position");
					this.OnpositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_military_rank", DbType="NVarChar(255)")]
		public string military_rank
		{
			get
			{
				return this._military_rank;
			}
			set
			{
				if ((this._military_rank != value))
				{
					this.Onmilitary_rankChanging(value);
					this.SendPropertyChanging();
					this._military_rank = value;
					this.SendPropertyChanged("military_rank");
					this.Onmilitary_rankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_office_hours", DbType="NVarChar(500)")]
		public string office_hours
		{
			get
			{
				return this._office_hours;
			}
			set
			{
				if ((this._office_hours != value))
				{
					this.Onoffice_hoursChanging(value);
					this.SendPropertyChanging();
					this._office_hours = value;
					this.SendPropertyChanged("office_hours");
					this.Onoffice_hoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[number/fax]", Storage="_number_fax", DbType="NVarChar(500)")]
		public string number_fax
		{
			get
			{
				return this._number_fax;
			}
			set
			{
				if ((this._number_fax != value))
				{
					this.Onnumber_faxChanging(value);
					this.SendPropertyChanging();
					this._number_fax = value;
					this.SendPropertyChanged("number_fax");
					this.Onnumber_faxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(500)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_residential_address", DbType="NVarChar(500)")]
		public string residential_address
		{
			get
			{
				return this._residential_address;
			}
			set
			{
				if ((this._residential_address != value))
				{
					this.Onresidential_addressChanging(value);
					this.SendPropertyChanging();
					this._residential_address = value;
					this.SendPropertyChanged("residential_address");
					this.Onresidential_addressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_arrival", DbType="Int")]
		public System.Nullable<int> id_arrival
		{
			get
			{
				return this._id_arrival;
			}
			set
			{
				if ((this._id_arrival != value))
				{
					if (this._arrival.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_arrivalChanging(value);
					this.SendPropertyChanging();
					this._id_arrival = value;
					this.SendPropertyChanged("id_arrival");
					this.Onid_arrivalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_embassyid_embassy", DbType="Int")]
		public System.Nullable<int> embassyid_embassy
		{
			get
			{
				return this._embassyid_embassy;
			}
			set
			{
				if ((this._embassyid_embassy != value))
				{
					if (this._embassy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onembassyid_embassyChanging(value);
					this.SendPropertyChanging();
					this._embassyid_embassy = value;
					this.SendPropertyChanged("embassyid_embassy");
					this.Onembassyid_embassyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="workplace_workplace_foreigners", Storage="_workplace_foreigners", ThisKey="id_workplace", OtherKey="id_workplace")]
		public EntitySet<workplace_foreigners> workplace_foreigners
		{
			get
			{
				return this._workplace_foreigners;
			}
			set
			{
				this._workplace_foreigners.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="workplace_project", Storage="_project", ThisKey="id_workplace", OtherKey="id_workplace")]
		public EntitySet<project> project
		{
			get
			{
				return this._project;
			}
			set
			{
				this._project.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="embassy_workplace", Storage="_embassy", ThisKey="embassyid_embassy", OtherKey="id_embassy", IsForeignKey=true)]
		public embassy embassy
		{
			get
			{
				return this._embassy.Entity;
			}
			set
			{
				embassy previousValue = this._embassy.Entity;
				if (((previousValue != value) 
							|| (this._embassy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._embassy.Entity = null;
						previousValue.workplace.Remove(this);
					}
					this._embassy.Entity = value;
					if ((value != null))
					{
						value.workplace.Add(this);
						this._embassyid_embassy = value.id_embassy;
					}
					else
					{
						this._embassyid_embassy = default(Nullable<int>);
					}
					this.SendPropertyChanged("embassy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="arrival_workplace", Storage="_arrival", ThisKey="id_arrival", OtherKey="id_arrival", IsForeignKey=true)]
		public arrival arrival
		{
			get
			{
				return this._arrival.Entity;
			}
			set
			{
				arrival previousValue = this._arrival.Entity;
				if (((previousValue != value) 
							|| (this._arrival.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._arrival.Entity = null;
						previousValue.workplace.Remove(this);
					}
					this._arrival.Entity = value;
					if ((value != null))
					{
						value.workplace.Add(this);
						this._id_arrival = value.id_arrival;
					}
					else
					{
						this._id_arrival = default(Nullable<int>);
					}
					this.SendPropertyChanged("arrival");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_workplace_foreigners(workplace_foreigners entity)
		{
			this.SendPropertyChanging();
			entity.workplace = this;
		}
		
		private void detach_workplace_foreigners(workplace_foreigners entity)
		{
			this.SendPropertyChanging();
			entity.workplace = null;
		}
		
		private void attach_project(project entity)
		{
			this.SendPropertyChanging();
			entity.workplace = this;
		}
		
		private void detach_project(project entity)
		{
			this.SendPropertyChanging();
			entity.workplace = null;
		}
	}
}
#pragma warning restore 1591
